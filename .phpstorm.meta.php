<?php
namespace PHPSTORM_META {

   /**
    * PhpStorm Meta file, to provide autocomplete information for PhpStorm
    * Generated on 2018-05-22 12:32:41.
    *
    * @author Barry vd. Heuvel <barryvdh@gmail.com>
    * @see https://github.com/barryvdh/laravel-ide-helper
    */
    override(new \Illuminate\Contracts\Container\Container, map([
        '' => '@',
        'db' => \Illuminate\Database\DatabaseManager::class,
        'config' => \Illuminate\Config\Repository::class,
        'db.factory' => \Grimzy\LaravelMysqlSpatial\Connectors\ConnectionFactory::class,
        'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
        'events' => \Illuminate\Events\Dispatcher::class,
        'view' => \Illuminate\View\Factory::class,
        'view.finder' => \Illuminate\View\FileViewFinder::class,
        'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
        'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
        'files' => \Illuminate\Filesystem\Filesystem::class,
        'Illuminate\Contracts\Debug\ExceptionHandler' => \App\Exceptions\Handler::class,
        'Illuminate\Contracts\Console\Kernel' => \App\Console\Kernel::class,
        'Psr\Log\LoggerInterface' => \Illuminate\Log\LogManager::class,
        'redis' => \Illuminate\Redis\RedisManager::class,
        'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
        'tymon.jwt.provider.user' => \Tymon\JWTAuth\Providers\User\EloquentUserAdapter::class,
        'tymon.jwt.provider.jwt' => \Tymon\JWTAuth\Providers\JWT\NamshiAdapter::class,
        'tymon.jwt.provider.auth' => \Tymon\JWTAuth\Providers\Auth\IlluminateAuthAdapter::class,
        'tymon.jwt.provider.storage' => \Tymon\JWTAuth\Providers\Storage\IlluminateCacheAdapter::class,
        'tymon.jwt.blacklist' => \Tymon\JWTAuth\Blacklist::class,
        'tymon.jwt.claim.factory' => \Tymon\JWTAuth\Claims\Factory::class,
        'tymon.jwt.manager' => \Tymon\JWTAuth\JWTManager::class,
        'tymon.jwt.auth' => \Tymon\JWTAuth\JWTAuth::class,
        'tymon.jwt.validators.payload' => \Tymon\JWTAuth\Validators\PayloadValidator::class,
        'tymon.jwt.payload.factory' => \Tymon\JWTAuth\PayloadFactory::class,
        'tymon.jwt.generate' => \Tymon\JWTAuth\Commands\JWTGenerateCommand::class,
        'Tymon\JWTAuth\JWTAuth' => \Tymon\JWTAuth\JWTAuth::class,
        'Tymon\JWTAuth\Providers\User\UserInterface' => \Tymon\JWTAuth\Providers\User\EloquentUserAdapter::class,
        'Tymon\JWTAuth\Providers\JWT\JWTInterface' => \Tymon\JWTAuth\Providers\JWT\NamshiAdapter::class,
        'Tymon\JWTAuth\Providers\Auth\AuthInterface' => \Tymon\JWTAuth\Providers\Auth\IlluminateAuthAdapter::class,
        'Tymon\JWTAuth\Providers\Storage\StorageInterface' => \Tymon\JWTAuth\Providers\Storage\IlluminateCacheAdapter::class,
        'Tymon\JWTAuth\JWTManager' => \Tymon\JWTAuth\JWTManager::class,
        'Tymon\JWTAuth\Blacklist' => \Tymon\JWTAuth\Blacklist::class,
        'Tymon\JWTAuth\PayloadFactory' => \Tymon\JWTAuth\PayloadFactory::class,
        'Tymon\JWTAuth\Claims\Factory' => \Tymon\JWTAuth\Claims\Factory::class,
        'Tymon\JWTAuth\Validators\PayloadValidator' => \Tymon\JWTAuth\Validators\PayloadValidator::class,
        'auth' => \Illuminate\Auth\AuthManager::class,
        'auth.driver' => \Zoran\JwtAuthGuard\JwtAuthGuard::class,
        'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
        'translator' => \Illuminate\Translation\Translator::class,
        'translation.loader' => \Illuminate\Translation\FileLoader::class,
        'wechat.official_account.default' => \EasyWeChat\OfficialAccount\Application::class,
        'wechat.mini_program.default' => \EasyWeChat\MiniProgram\Application::class,
        'wechat.payment.default' => \EasyWeChat\Payment\Application::class,
        'ali.user.oauth' => \App\Ali\Oauth\OauthChargeContext::class,
        'ali.oauth.token' => \App\Ali\Oauth\OauthChargeContext::class,
        'command.ide-helper.generate' => \Barryvdh\LaravelIdeHelper\Console\GeneratorCommand::class,
        'command.ide-helper.models' => \Barryvdh\LaravelIdeHelper\Console\ModelsCommand::class,
        'command.ide-helper.meta' => \Barryvdh\LaravelIdeHelper\Console\MetaCommand::class,
        'command.ide-helper.eloquent' => \Barryvdh\LaravelIdeHelper\Console\EloquentCommand::class,
        'payment.ali.wap' => \Payment\ChargeContext::class,
        'payment.ali.web' => \Payment\ChargeContext::class,
        'payment.ali.bar' => \Payment\ChargeContext::class,
        'payment.ali.app' => \Payment\ChargeContext::class,
        'payment.ali.qr' => \Payment\ChargeContext::class,
        'payment.wechat.app' => \Payment\ChargeContext::class,
        'payment.wechat.wap' => \Payment\ChargeContext::class,
        'payment.wechat.public' => \Payment\ChargeContext::class,
        'payment.wechat.bar' => \Payment\ChargeContext::class,
        'payment.wechat.miniProgram' => \Payment\ChargeContext::class,
        'payment.wechat.qr' => \Payment\ChargeContext::class,
        'payment.wechat.notify' => \Payment\NotifyContext::class,
        'payment.ali.notify' => \Payment\NotifyContext::class,
        'payment.notify' => \App\Services\PaymentNotify::class,
        'wechat.payment.aggregate' => \Payment\ChargeContext::class,
        'ali.payment.aggregate' => \Payment\ChargeContext::class,
        'order.builder' => \App\Services\OrderBuilder::class,
        'api.router' => \Dingo\Api\Routing\Router::class,
        'Dingo\Api\Routing\ResourceRegistrar' => \Dingo\Api\Routing\ResourceRegistrar::class,
        'api.url' => \Dingo\Api\Routing\UrlGenerator::class,
        'api.limiting' => \Dingo\Api\Http\RateLimit\Handler::class,
        'api.http.validator' => \Dingo\Api\Http\RequestValidator::class,
        'Dingo\Api\Http\Validation\Domain' => \Dingo\Api\Http\Validation\Domain::class,
        'Dingo\Api\Http\Validation\Prefix' => \Dingo\Api\Http\Validation\Prefix::class,
        'Dingo\Api\Http\Validation\Accept' => \Dingo\Api\Http\Validation\Accept::class,
        'Dingo\Api\Http\Parser\Accept' => \Dingo\Api\Http\Parser\Accept::class,
        'api.http.response' => \Dingo\Api\Http\Response\Factory::class,
        'Dingo\Api\Http\Middleware\Request' => \Dingo\Api\Http\Middleware\Request::class,
        'Dingo\Api\Http\Middleware\Auth' => \Dingo\Api\Http\Middleware\Auth::class,
        'Dingo\Api\Http\Middleware\RateLimit' => \Dingo\Api\Http\Middleware\RateLimit::class,
        'Dingo\Api\Http\Middleware\PrepareController' => \Dingo\Api\Http\Middleware\PrepareController::class,
        'api.exception' => \Dingo\Api\Exception\Handler::class,
        'api.dispatcher' => \Dingo\Api\Dispatcher::class,
        'api.auth' => \Dingo\Api\Auth\Auth::class,
        'api.transformer' => \Dingo\Api\Transformer\Factory::class,
        'Dingo\Api\Console\Command\Docs' => \Dingo\Api\Console\Command\Docs::class,
        'api.router.adapter' => \Dingo\Api\Routing\Adapter\Lumen::class,
        'cache' => \Illuminate\Cache\CacheManager::class,
        'cache.store' => \Illuminate\Cache\Repository::class,
        'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
        'app.routes' => \App\Routes\Routes::class,
        'queue' => \Illuminate\Queue\QueueManager::class,
        'queue.worker' => \Illuminate\Queue\Worker::class,
        'queue.listener' => \Illuminate\Queue\Listener::class,
        'queue.failer' => \Illuminate\Queue\Failed\DatabaseFailedJobProvider::class,
        'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
        'migrator' => \Illuminate\Database\Migrations\Migrator::class,
        'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
        'command.cache.clear' => \Illuminate\Cache\Console\ClearCommand::class,
        'command.cache.forget' => \Illuminate\Cache\Console\ForgetCommand::class,
        'command.auth.resets.clear' => \Illuminate\Auth\Console\ClearResetsCommand::class,
        'command.migrate' => \Illuminate\Database\Console\Migrations\MigrateCommand::class,
        'command.migrate.install' => \Illuminate\Database\Console\Migrations\InstallCommand::class,
        'command.migrate.fresh' => \Illuminate\Database\Console\Migrations\FreshCommand::class,
        'command.migrate.refresh' => \Illuminate\Database\Console\Migrations\RefreshCommand::class,
        'command.migrate.reset' => \Illuminate\Database\Console\Migrations\ResetCommand::class,
        'command.migrate.rollback' => \Illuminate\Database\Console\Migrations\RollbackCommand::class,
        'command.migrate.status' => \Illuminate\Database\Console\Migrations\StatusCommand::class,
        'command.queue.failed' => \Illuminate\Queue\Console\ListFailedCommand::class,
        'command.queue.flush' => \Illuminate\Queue\Console\FlushFailedCommand::class,
        'command.queue.forget' => \Illuminate\Queue\Console\ForgetFailedCommand::class,
        'command.queue.listen' => \Illuminate\Queue\Console\ListenCommand::class,
        'command.queue.restart' => \Illuminate\Queue\Console\RestartCommand::class,
        'command.queue.retry' => \Illuminate\Queue\Console\RetryCommand::class,
        'command.queue.work' => \Illuminate\Queue\Console\WorkCommand::class,
        'command.seed' => \Illuminate\Database\Console\Seeds\SeedCommand::class,
        'Illuminate\Console\Scheduling\ScheduleFinishCommand' => \Illuminate\Console\Scheduling\ScheduleFinishCommand::class,
        'Illuminate\Console\Scheduling\ScheduleRunCommand' => \Illuminate\Console\Scheduling\ScheduleRunCommand::class,
        'command.cache.table' => \Illuminate\Cache\Console\CacheTableCommand::class,
        'command.migrate.make' => \Illuminate\Database\Console\Migrations\MigrateMakeCommand::class,
        'command.queue.failed-table' => \Illuminate\Queue\Console\FailedTableCommand::class,
        'command.queue.table' => \Illuminate\Queue\Console\TableCommand::class,
        'command.seeder.make' => \Illuminate\Database\Console\Seeds\SeederMakeCommand::class,
        'composer' => \Illuminate\Support\Composer::class,
    ]));
    override(\Illuminate\Contracts\Container\Container::make(0), map([
        '' => '@',
        'db' => \Illuminate\Database\DatabaseManager::class,
        'config' => \Illuminate\Config\Repository::class,
        'db.factory' => \Grimzy\LaravelMysqlSpatial\Connectors\ConnectionFactory::class,
        'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
        'events' => \Illuminate\Events\Dispatcher::class,
        'view' => \Illuminate\View\Factory::class,
        'view.finder' => \Illuminate\View\FileViewFinder::class,
        'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
        'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
        'files' => \Illuminate\Filesystem\Filesystem::class,
        'Illuminate\Contracts\Debug\ExceptionHandler' => \App\Exceptions\Handler::class,
        'Illuminate\Contracts\Console\Kernel' => \App\Console\Kernel::class,
        'Psr\Log\LoggerInterface' => \Illuminate\Log\LogManager::class,
        'redis' => \Illuminate\Redis\RedisManager::class,
        'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
        'tymon.jwt.provider.user' => \Tymon\JWTAuth\Providers\User\EloquentUserAdapter::class,
        'tymon.jwt.provider.jwt' => \Tymon\JWTAuth\Providers\JWT\NamshiAdapter::class,
        'tymon.jwt.provider.auth' => \Tymon\JWTAuth\Providers\Auth\IlluminateAuthAdapter::class,
        'tymon.jwt.provider.storage' => \Tymon\JWTAuth\Providers\Storage\IlluminateCacheAdapter::class,
        'tymon.jwt.blacklist' => \Tymon\JWTAuth\Blacklist::class,
        'tymon.jwt.claim.factory' => \Tymon\JWTAuth\Claims\Factory::class,
        'tymon.jwt.manager' => \Tymon\JWTAuth\JWTManager::class,
        'tymon.jwt.auth' => \Tymon\JWTAuth\JWTAuth::class,
        'tymon.jwt.validators.payload' => \Tymon\JWTAuth\Validators\PayloadValidator::class,
        'tymon.jwt.payload.factory' => \Tymon\JWTAuth\PayloadFactory::class,
        'tymon.jwt.generate' => \Tymon\JWTAuth\Commands\JWTGenerateCommand::class,
        'Tymon\JWTAuth\JWTAuth' => \Tymon\JWTAuth\JWTAuth::class,
        'Tymon\JWTAuth\Providers\User\UserInterface' => \Tymon\JWTAuth\Providers\User\EloquentUserAdapter::class,
        'Tymon\JWTAuth\Providers\JWT\JWTInterface' => \Tymon\JWTAuth\Providers\JWT\NamshiAdapter::class,
        'Tymon\JWTAuth\Providers\Auth\AuthInterface' => \Tymon\JWTAuth\Providers\Auth\IlluminateAuthAdapter::class,
        'Tymon\JWTAuth\Providers\Storage\StorageInterface' => \Tymon\JWTAuth\Providers\Storage\IlluminateCacheAdapter::class,
        'Tymon\JWTAuth\JWTManager' => \Tymon\JWTAuth\JWTManager::class,
        'Tymon\JWTAuth\Blacklist' => \Tymon\JWTAuth\Blacklist::class,
        'Tymon\JWTAuth\PayloadFactory' => \Tymon\JWTAuth\PayloadFactory::class,
        'Tymon\JWTAuth\Claims\Factory' => \Tymon\JWTAuth\Claims\Factory::class,
        'Tymon\JWTAuth\Validators\PayloadValidator' => \Tymon\JWTAuth\Validators\PayloadValidator::class,
        'auth' => \Illuminate\Auth\AuthManager::class,
        'auth.driver' => \Zoran\JwtAuthGuard\JwtAuthGuard::class,
        'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
        'translator' => \Illuminate\Translation\Translator::class,
        'translation.loader' => \Illuminate\Translation\FileLoader::class,
        'wechat.official_account.default' => \EasyWeChat\OfficialAccount\Application::class,
        'wechat.mini_program.default' => \EasyWeChat\MiniProgram\Application::class,
        'wechat.payment.default' => \EasyWeChat\Payment\Application::class,
        'ali.user.oauth' => \App\Ali\Oauth\OauthChargeContext::class,
        'ali.oauth.token' => \App\Ali\Oauth\OauthChargeContext::class,
        'command.ide-helper.generate' => \Barryvdh\LaravelIdeHelper\Console\GeneratorCommand::class,
        'command.ide-helper.models' => \Barryvdh\LaravelIdeHelper\Console\ModelsCommand::class,
        'command.ide-helper.meta' => \Barryvdh\LaravelIdeHelper\Console\MetaCommand::class,
        'command.ide-helper.eloquent' => \Barryvdh\LaravelIdeHelper\Console\EloquentCommand::class,
        'payment.ali.wap' => \Payment\ChargeContext::class,
        'payment.ali.web' => \Payment\ChargeContext::class,
        'payment.ali.bar' => \Payment\ChargeContext::class,
        'payment.ali.app' => \Payment\ChargeContext::class,
        'payment.ali.qr' => \Payment\ChargeContext::class,
        'payment.wechat.app' => \Payment\ChargeContext::class,
        'payment.wechat.wap' => \Payment\ChargeContext::class,
        'payment.wechat.public' => \Payment\ChargeContext::class,
        'payment.wechat.bar' => \Payment\ChargeContext::class,
        'payment.wechat.miniProgram' => \Payment\ChargeContext::class,
        'payment.wechat.qr' => \Payment\ChargeContext::class,
        'payment.wechat.notify' => \Payment\NotifyContext::class,
        'payment.ali.notify' => \Payment\NotifyContext::class,
        'payment.notify' => \App\Services\PaymentNotify::class,
        'wechat.payment.aggregate' => \Payment\ChargeContext::class,
        'ali.payment.aggregate' => \Payment\ChargeContext::class,
        'order.builder' => \App\Services\OrderBuilder::class,
        'api.router' => \Dingo\Api\Routing\Router::class,
        'Dingo\Api\Routing\ResourceRegistrar' => \Dingo\Api\Routing\ResourceRegistrar::class,
        'api.url' => \Dingo\Api\Routing\UrlGenerator::class,
        'api.limiting' => \Dingo\Api\Http\RateLimit\Handler::class,
        'api.http.validator' => \Dingo\Api\Http\RequestValidator::class,
        'Dingo\Api\Http\Validation\Domain' => \Dingo\Api\Http\Validation\Domain::class,
        'Dingo\Api\Http\Validation\Prefix' => \Dingo\Api\Http\Validation\Prefix::class,
        'Dingo\Api\Http\Validation\Accept' => \Dingo\Api\Http\Validation\Accept::class,
        'Dingo\Api\Http\Parser\Accept' => \Dingo\Api\Http\Parser\Accept::class,
        'api.http.response' => \Dingo\Api\Http\Response\Factory::class,
        'Dingo\Api\Http\Middleware\Request' => \Dingo\Api\Http\Middleware\Request::class,
        'Dingo\Api\Http\Middleware\Auth' => \Dingo\Api\Http\Middleware\Auth::class,
        'Dingo\Api\Http\Middleware\RateLimit' => \Dingo\Api\Http\Middleware\RateLimit::class,
        'Dingo\Api\Http\Middleware\PrepareController' => \Dingo\Api\Http\Middleware\PrepareController::class,
        'api.exception' => \Dingo\Api\Exception\Handler::class,
        'api.dispatcher' => \Dingo\Api\Dispatcher::class,
        'api.auth' => \Dingo\Api\Auth\Auth::class,
        'api.transformer' => \Dingo\Api\Transformer\Factory::class,
        'Dingo\Api\Console\Command\Docs' => \Dingo\Api\Console\Command\Docs::class,
        'api.router.adapter' => \Dingo\Api\Routing\Adapter\Lumen::class,
        'cache' => \Illuminate\Cache\CacheManager::class,
        'cache.store' => \Illuminate\Cache\Repository::class,
        'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
        'app.routes' => \App\Routes\Routes::class,
        'queue' => \Illuminate\Queue\QueueManager::class,
        'queue.worker' => \Illuminate\Queue\Worker::class,
        'queue.listener' => \Illuminate\Queue\Listener::class,
        'queue.failer' => \Illuminate\Queue\Failed\DatabaseFailedJobProvider::class,
        'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
        'migrator' => \Illuminate\Database\Migrations\Migrator::class,
        'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
        'command.cache.clear' => \Illuminate\Cache\Console\ClearCommand::class,
        'command.cache.forget' => \Illuminate\Cache\Console\ForgetCommand::class,
        'command.auth.resets.clear' => \Illuminate\Auth\Console\ClearResetsCommand::class,
        'command.migrate' => \Illuminate\Database\Console\Migrations\MigrateCommand::class,
        'command.migrate.install' => \Illuminate\Database\Console\Migrations\InstallCommand::class,
        'command.migrate.fresh' => \Illuminate\Database\Console\Migrations\FreshCommand::class,
        'command.migrate.refresh' => \Illuminate\Database\Console\Migrations\RefreshCommand::class,
        'command.migrate.reset' => \Illuminate\Database\Console\Migrations\ResetCommand::class,
        'command.migrate.rollback' => \Illuminate\Database\Console\Migrations\RollbackCommand::class,
        'command.migrate.status' => \Illuminate\Database\Console\Migrations\StatusCommand::class,
        'command.queue.failed' => \Illuminate\Queue\Console\ListFailedCommand::class,
        'command.queue.flush' => \Illuminate\Queue\Console\FlushFailedCommand::class,
        'command.queue.forget' => \Illuminate\Queue\Console\ForgetFailedCommand::class,
        'command.queue.listen' => \Illuminate\Queue\Console\ListenCommand::class,
        'command.queue.restart' => \Illuminate\Queue\Console\RestartCommand::class,
        'command.queue.retry' => \Illuminate\Queue\Console\RetryCommand::class,
        'command.queue.work' => \Illuminate\Queue\Console\WorkCommand::class,
        'command.seed' => \Illuminate\Database\Console\Seeds\SeedCommand::class,
        'Illuminate\Console\Scheduling\ScheduleFinishCommand' => \Illuminate\Console\Scheduling\ScheduleFinishCommand::class,
        'Illuminate\Console\Scheduling\ScheduleRunCommand' => \Illuminate\Console\Scheduling\ScheduleRunCommand::class,
        'command.cache.table' => \Illuminate\Cache\Console\CacheTableCommand::class,
        'command.migrate.make' => \Illuminate\Database\Console\Migrations\MigrateMakeCommand::class,
        'command.queue.failed-table' => \Illuminate\Queue\Console\FailedTableCommand::class,
        'command.queue.table' => \Illuminate\Queue\Console\TableCommand::class,
        'command.seeder.make' => \Illuminate\Database\Console\Seeds\SeederMakeCommand::class,
        'composer' => \Illuminate\Support\Composer::class,
    ]));
    override(\Illuminate\Contracts\Container\Container::makeWith(0), map([
        '' => '@',
        'db' => \Illuminate\Database\DatabaseManager::class,
        'config' => \Illuminate\Config\Repository::class,
        'db.factory' => \Grimzy\LaravelMysqlSpatial\Connectors\ConnectionFactory::class,
        'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
        'events' => \Illuminate\Events\Dispatcher::class,
        'view' => \Illuminate\View\Factory::class,
        'view.finder' => \Illuminate\View\FileViewFinder::class,
        'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
        'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
        'files' => \Illuminate\Filesystem\Filesystem::class,
        'Illuminate\Contracts\Debug\ExceptionHandler' => \App\Exceptions\Handler::class,
        'Illuminate\Contracts\Console\Kernel' => \App\Console\Kernel::class,
        'Psr\Log\LoggerInterface' => \Illuminate\Log\LogManager::class,
        'redis' => \Illuminate\Redis\RedisManager::class,
        'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
        'tymon.jwt.provider.user' => \Tymon\JWTAuth\Providers\User\EloquentUserAdapter::class,
        'tymon.jwt.provider.jwt' => \Tymon\JWTAuth\Providers\JWT\NamshiAdapter::class,
        'tymon.jwt.provider.auth' => \Tymon\JWTAuth\Providers\Auth\IlluminateAuthAdapter::class,
        'tymon.jwt.provider.storage' => \Tymon\JWTAuth\Providers\Storage\IlluminateCacheAdapter::class,
        'tymon.jwt.blacklist' => \Tymon\JWTAuth\Blacklist::class,
        'tymon.jwt.claim.factory' => \Tymon\JWTAuth\Claims\Factory::class,
        'tymon.jwt.manager' => \Tymon\JWTAuth\JWTManager::class,
        'tymon.jwt.auth' => \Tymon\JWTAuth\JWTAuth::class,
        'tymon.jwt.validators.payload' => \Tymon\JWTAuth\Validators\PayloadValidator::class,
        'tymon.jwt.payload.factory' => \Tymon\JWTAuth\PayloadFactory::class,
        'tymon.jwt.generate' => \Tymon\JWTAuth\Commands\JWTGenerateCommand::class,
        'Tymon\JWTAuth\JWTAuth' => \Tymon\JWTAuth\JWTAuth::class,
        'Tymon\JWTAuth\Providers\User\UserInterface' => \Tymon\JWTAuth\Providers\User\EloquentUserAdapter::class,
        'Tymon\JWTAuth\Providers\JWT\JWTInterface' => \Tymon\JWTAuth\Providers\JWT\NamshiAdapter::class,
        'Tymon\JWTAuth\Providers\Auth\AuthInterface' => \Tymon\JWTAuth\Providers\Auth\IlluminateAuthAdapter::class,
        'Tymon\JWTAuth\Providers\Storage\StorageInterface' => \Tymon\JWTAuth\Providers\Storage\IlluminateCacheAdapter::class,
        'Tymon\JWTAuth\JWTManager' => \Tymon\JWTAuth\JWTManager::class,
        'Tymon\JWTAuth\Blacklist' => \Tymon\JWTAuth\Blacklist::class,
        'Tymon\JWTAuth\PayloadFactory' => \Tymon\JWTAuth\PayloadFactory::class,
        'Tymon\JWTAuth\Claims\Factory' => \Tymon\JWTAuth\Claims\Factory::class,
        'Tymon\JWTAuth\Validators\PayloadValidator' => \Tymon\JWTAuth\Validators\PayloadValidator::class,
        'auth' => \Illuminate\Auth\AuthManager::class,
        'auth.driver' => \Zoran\JwtAuthGuard\JwtAuthGuard::class,
        'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
        'translator' => \Illuminate\Translation\Translator::class,
        'translation.loader' => \Illuminate\Translation\FileLoader::class,
        'wechat.official_account.default' => \EasyWeChat\OfficialAccount\Application::class,
        'wechat.mini_program.default' => \EasyWeChat\MiniProgram\Application::class,
        'wechat.payment.default' => \EasyWeChat\Payment\Application::class,
        'ali.user.oauth' => \App\Ali\Oauth\OauthChargeContext::class,
        'ali.oauth.token' => \App\Ali\Oauth\OauthChargeContext::class,
        'command.ide-helper.generate' => \Barryvdh\LaravelIdeHelper\Console\GeneratorCommand::class,
        'command.ide-helper.models' => \Barryvdh\LaravelIdeHelper\Console\ModelsCommand::class,
        'command.ide-helper.meta' => \Barryvdh\LaravelIdeHelper\Console\MetaCommand::class,
        'command.ide-helper.eloquent' => \Barryvdh\LaravelIdeHelper\Console\EloquentCommand::class,
        'payment.ali.wap' => \Payment\ChargeContext::class,
        'payment.ali.web' => \Payment\ChargeContext::class,
        'payment.ali.bar' => \Payment\ChargeContext::class,
        'payment.ali.app' => \Payment\ChargeContext::class,
        'payment.ali.qr' => \Payment\ChargeContext::class,
        'payment.wechat.app' => \Payment\ChargeContext::class,
        'payment.wechat.wap' => \Payment\ChargeContext::class,
        'payment.wechat.public' => \Payment\ChargeContext::class,
        'payment.wechat.bar' => \Payment\ChargeContext::class,
        'payment.wechat.miniProgram' => \Payment\ChargeContext::class,
        'payment.wechat.qr' => \Payment\ChargeContext::class,
        'payment.wechat.notify' => \Payment\NotifyContext::class,
        'payment.ali.notify' => \Payment\NotifyContext::class,
        'payment.notify' => \App\Services\PaymentNotify::class,
        'wechat.payment.aggregate' => \Payment\ChargeContext::class,
        'ali.payment.aggregate' => \Payment\ChargeContext::class,
        'order.builder' => \App\Services\OrderBuilder::class,
        'api.router' => \Dingo\Api\Routing\Router::class,
        'Dingo\Api\Routing\ResourceRegistrar' => \Dingo\Api\Routing\ResourceRegistrar::class,
        'api.url' => \Dingo\Api\Routing\UrlGenerator::class,
        'api.limiting' => \Dingo\Api\Http\RateLimit\Handler::class,
        'api.http.validator' => \Dingo\Api\Http\RequestValidator::class,
        'Dingo\Api\Http\Validation\Domain' => \Dingo\Api\Http\Validation\Domain::class,
        'Dingo\Api\Http\Validation\Prefix' => \Dingo\Api\Http\Validation\Prefix::class,
        'Dingo\Api\Http\Validation\Accept' => \Dingo\Api\Http\Validation\Accept::class,
        'Dingo\Api\Http\Parser\Accept' => \Dingo\Api\Http\Parser\Accept::class,
        'api.http.response' => \Dingo\Api\Http\Response\Factory::class,
        'Dingo\Api\Http\Middleware\Request' => \Dingo\Api\Http\Middleware\Request::class,
        'Dingo\Api\Http\Middleware\Auth' => \Dingo\Api\Http\Middleware\Auth::class,
        'Dingo\Api\Http\Middleware\RateLimit' => \Dingo\Api\Http\Middleware\RateLimit::class,
        'Dingo\Api\Http\Middleware\PrepareController' => \Dingo\Api\Http\Middleware\PrepareController::class,
        'api.exception' => \Dingo\Api\Exception\Handler::class,
        'api.dispatcher' => \Dingo\Api\Dispatcher::class,
        'api.auth' => \Dingo\Api\Auth\Auth::class,
        'api.transformer' => \Dingo\Api\Transformer\Factory::class,
        'Dingo\Api\Console\Command\Docs' => \Dingo\Api\Console\Command\Docs::class,
        'api.router.adapter' => \Dingo\Api\Routing\Adapter\Lumen::class,
        'cache' => \Illuminate\Cache\CacheManager::class,
        'cache.store' => \Illuminate\Cache\Repository::class,
        'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
        'app.routes' => \App\Routes\Routes::class,
        'queue' => \Illuminate\Queue\QueueManager::class,
        'queue.worker' => \Illuminate\Queue\Worker::class,
        'queue.listener' => \Illuminate\Queue\Listener::class,
        'queue.failer' => \Illuminate\Queue\Failed\DatabaseFailedJobProvider::class,
        'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
        'migrator' => \Illuminate\Database\Migrations\Migrator::class,
        'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
        'command.cache.clear' => \Illuminate\Cache\Console\ClearCommand::class,
        'command.cache.forget' => \Illuminate\Cache\Console\ForgetCommand::class,
        'command.auth.resets.clear' => \Illuminate\Auth\Console\ClearResetsCommand::class,
        'command.migrate' => \Illuminate\Database\Console\Migrations\MigrateCommand::class,
        'command.migrate.install' => \Illuminate\Database\Console\Migrations\InstallCommand::class,
        'command.migrate.fresh' => \Illuminate\Database\Console\Migrations\FreshCommand::class,
        'command.migrate.refresh' => \Illuminate\Database\Console\Migrations\RefreshCommand::class,
        'command.migrate.reset' => \Illuminate\Database\Console\Migrations\ResetCommand::class,
        'command.migrate.rollback' => \Illuminate\Database\Console\Migrations\RollbackCommand::class,
        'command.migrate.status' => \Illuminate\Database\Console\Migrations\StatusCommand::class,
        'command.queue.failed' => \Illuminate\Queue\Console\ListFailedCommand::class,
        'command.queue.flush' => \Illuminate\Queue\Console\FlushFailedCommand::class,
        'command.queue.forget' => \Illuminate\Queue\Console\ForgetFailedCommand::class,
        'command.queue.listen' => \Illuminate\Queue\Console\ListenCommand::class,
        'command.queue.restart' => \Illuminate\Queue\Console\RestartCommand::class,
        'command.queue.retry' => \Illuminate\Queue\Console\RetryCommand::class,
        'command.queue.work' => \Illuminate\Queue\Console\WorkCommand::class,
        'command.seed' => \Illuminate\Database\Console\Seeds\SeedCommand::class,
        'Illuminate\Console\Scheduling\ScheduleFinishCommand' => \Illuminate\Console\Scheduling\ScheduleFinishCommand::class,
        'Illuminate\Console\Scheduling\ScheduleRunCommand' => \Illuminate\Console\Scheduling\ScheduleRunCommand::class,
        'command.cache.table' => \Illuminate\Cache\Console\CacheTableCommand::class,
        'command.migrate.make' => \Illuminate\Database\Console\Migrations\MigrateMakeCommand::class,
        'command.queue.failed-table' => \Illuminate\Queue\Console\FailedTableCommand::class,
        'command.queue.table' => \Illuminate\Queue\Console\TableCommand::class,
        'command.seeder.make' => \Illuminate\Database\Console\Seeds\SeederMakeCommand::class,
        'composer' => \Illuminate\Support\Composer::class,
    ]));
    override(\App::make(0), map([
        '' => '@',
        'db' => \Illuminate\Database\DatabaseManager::class,
        'config' => \Illuminate\Config\Repository::class,
        'db.factory' => \Grimzy\LaravelMysqlSpatial\Connectors\ConnectionFactory::class,
        'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
        'events' => \Illuminate\Events\Dispatcher::class,
        'view' => \Illuminate\View\Factory::class,
        'view.finder' => \Illuminate\View\FileViewFinder::class,
        'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
        'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
        'files' => \Illuminate\Filesystem\Filesystem::class,
        'Illuminate\Contracts\Debug\ExceptionHandler' => \App\Exceptions\Handler::class,
        'Illuminate\Contracts\Console\Kernel' => \App\Console\Kernel::class,
        'Psr\Log\LoggerInterface' => \Illuminate\Log\LogManager::class,
        'redis' => \Illuminate\Redis\RedisManager::class,
        'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
        'tymon.jwt.provider.user' => \Tymon\JWTAuth\Providers\User\EloquentUserAdapter::class,
        'tymon.jwt.provider.jwt' => \Tymon\JWTAuth\Providers\JWT\NamshiAdapter::class,
        'tymon.jwt.provider.auth' => \Tymon\JWTAuth\Providers\Auth\IlluminateAuthAdapter::class,
        'tymon.jwt.provider.storage' => \Tymon\JWTAuth\Providers\Storage\IlluminateCacheAdapter::class,
        'tymon.jwt.blacklist' => \Tymon\JWTAuth\Blacklist::class,
        'tymon.jwt.claim.factory' => \Tymon\JWTAuth\Claims\Factory::class,
        'tymon.jwt.manager' => \Tymon\JWTAuth\JWTManager::class,
        'tymon.jwt.auth' => \Tymon\JWTAuth\JWTAuth::class,
        'tymon.jwt.validators.payload' => \Tymon\JWTAuth\Validators\PayloadValidator::class,
        'tymon.jwt.payload.factory' => \Tymon\JWTAuth\PayloadFactory::class,
        'tymon.jwt.generate' => \Tymon\JWTAuth\Commands\JWTGenerateCommand::class,
        'Tymon\JWTAuth\JWTAuth' => \Tymon\JWTAuth\JWTAuth::class,
        'Tymon\JWTAuth\Providers\User\UserInterface' => \Tymon\JWTAuth\Providers\User\EloquentUserAdapter::class,
        'Tymon\JWTAuth\Providers\JWT\JWTInterface' => \Tymon\JWTAuth\Providers\JWT\NamshiAdapter::class,
        'Tymon\JWTAuth\Providers\Auth\AuthInterface' => \Tymon\JWTAuth\Providers\Auth\IlluminateAuthAdapter::class,
        'Tymon\JWTAuth\Providers\Storage\StorageInterface' => \Tymon\JWTAuth\Providers\Storage\IlluminateCacheAdapter::class,
        'Tymon\JWTAuth\JWTManager' => \Tymon\JWTAuth\JWTManager::class,
        'Tymon\JWTAuth\Blacklist' => \Tymon\JWTAuth\Blacklist::class,
        'Tymon\JWTAuth\PayloadFactory' => \Tymon\JWTAuth\PayloadFactory::class,
        'Tymon\JWTAuth\Claims\Factory' => \Tymon\JWTAuth\Claims\Factory::class,
        'Tymon\JWTAuth\Validators\PayloadValidator' => \Tymon\JWTAuth\Validators\PayloadValidator::class,
        'auth' => \Illuminate\Auth\AuthManager::class,
        'auth.driver' => \Zoran\JwtAuthGuard\JwtAuthGuard::class,
        'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
        'translator' => \Illuminate\Translation\Translator::class,
        'translation.loader' => \Illuminate\Translation\FileLoader::class,
        'wechat.official_account.default' => \EasyWeChat\OfficialAccount\Application::class,
        'wechat.mini_program.default' => \EasyWeChat\MiniProgram\Application::class,
        'wechat.payment.default' => \EasyWeChat\Payment\Application::class,
        'ali.user.oauth' => \App\Ali\Oauth\OauthChargeContext::class,
        'ali.oauth.token' => \App\Ali\Oauth\OauthChargeContext::class,
        'command.ide-helper.generate' => \Barryvdh\LaravelIdeHelper\Console\GeneratorCommand::class,
        'command.ide-helper.models' => \Barryvdh\LaravelIdeHelper\Console\ModelsCommand::class,
        'command.ide-helper.meta' => \Barryvdh\LaravelIdeHelper\Console\MetaCommand::class,
        'command.ide-helper.eloquent' => \Barryvdh\LaravelIdeHelper\Console\EloquentCommand::class,
        'payment.ali.wap' => \Payment\ChargeContext::class,
        'payment.ali.web' => \Payment\ChargeContext::class,
        'payment.ali.bar' => \Payment\ChargeContext::class,
        'payment.ali.app' => \Payment\ChargeContext::class,
        'payment.ali.qr' => \Payment\ChargeContext::class,
        'payment.wechat.app' => \Payment\ChargeContext::class,
        'payment.wechat.wap' => \Payment\ChargeContext::class,
        'payment.wechat.public' => \Payment\ChargeContext::class,
        'payment.wechat.bar' => \Payment\ChargeContext::class,
        'payment.wechat.miniProgram' => \Payment\ChargeContext::class,
        'payment.wechat.qr' => \Payment\ChargeContext::class,
        'payment.wechat.notify' => \Payment\NotifyContext::class,
        'payment.ali.notify' => \Payment\NotifyContext::class,
        'payment.notify' => \App\Services\PaymentNotify::class,
        'wechat.payment.aggregate' => \Payment\ChargeContext::class,
        'ali.payment.aggregate' => \Payment\ChargeContext::class,
        'order.builder' => \App\Services\OrderBuilder::class,
        'api.router' => \Dingo\Api\Routing\Router::class,
        'Dingo\Api\Routing\ResourceRegistrar' => \Dingo\Api\Routing\ResourceRegistrar::class,
        'api.url' => \Dingo\Api\Routing\UrlGenerator::class,
        'api.limiting' => \Dingo\Api\Http\RateLimit\Handler::class,
        'api.http.validator' => \Dingo\Api\Http\RequestValidator::class,
        'Dingo\Api\Http\Validation\Domain' => \Dingo\Api\Http\Validation\Domain::class,
        'Dingo\Api\Http\Validation\Prefix' => \Dingo\Api\Http\Validation\Prefix::class,
        'Dingo\Api\Http\Validation\Accept' => \Dingo\Api\Http\Validation\Accept::class,
        'Dingo\Api\Http\Parser\Accept' => \Dingo\Api\Http\Parser\Accept::class,
        'api.http.response' => \Dingo\Api\Http\Response\Factory::class,
        'Dingo\Api\Http\Middleware\Request' => \Dingo\Api\Http\Middleware\Request::class,
        'Dingo\Api\Http\Middleware\Auth' => \Dingo\Api\Http\Middleware\Auth::class,
        'Dingo\Api\Http\Middleware\RateLimit' => \Dingo\Api\Http\Middleware\RateLimit::class,
        'Dingo\Api\Http\Middleware\PrepareController' => \Dingo\Api\Http\Middleware\PrepareController::class,
        'api.exception' => \Dingo\Api\Exception\Handler::class,
        'api.dispatcher' => \Dingo\Api\Dispatcher::class,
        'api.auth' => \Dingo\Api\Auth\Auth::class,
        'api.transformer' => \Dingo\Api\Transformer\Factory::class,
        'Dingo\Api\Console\Command\Docs' => \Dingo\Api\Console\Command\Docs::class,
        'api.router.adapter' => \Dingo\Api\Routing\Adapter\Lumen::class,
        'cache' => \Illuminate\Cache\CacheManager::class,
        'cache.store' => \Illuminate\Cache\Repository::class,
        'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
        'app.routes' => \App\Routes\Routes::class,
        'queue' => \Illuminate\Queue\QueueManager::class,
        'queue.worker' => \Illuminate\Queue\Worker::class,
        'queue.listener' => \Illuminate\Queue\Listener::class,
        'queue.failer' => \Illuminate\Queue\Failed\DatabaseFailedJobProvider::class,
        'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
        'migrator' => \Illuminate\Database\Migrations\Migrator::class,
        'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
        'command.cache.clear' => \Illuminate\Cache\Console\ClearCommand::class,
        'command.cache.forget' => \Illuminate\Cache\Console\ForgetCommand::class,
        'command.auth.resets.clear' => \Illuminate\Auth\Console\ClearResetsCommand::class,
        'command.migrate' => \Illuminate\Database\Console\Migrations\MigrateCommand::class,
        'command.migrate.install' => \Illuminate\Database\Console\Migrations\InstallCommand::class,
        'command.migrate.fresh' => \Illuminate\Database\Console\Migrations\FreshCommand::class,
        'command.migrate.refresh' => \Illuminate\Database\Console\Migrations\RefreshCommand::class,
        'command.migrate.reset' => \Illuminate\Database\Console\Migrations\ResetCommand::class,
        'command.migrate.rollback' => \Illuminate\Database\Console\Migrations\RollbackCommand::class,
        'command.migrate.status' => \Illuminate\Database\Console\Migrations\StatusCommand::class,
        'command.queue.failed' => \Illuminate\Queue\Console\ListFailedCommand::class,
        'command.queue.flush' => \Illuminate\Queue\Console\FlushFailedCommand::class,
        'command.queue.forget' => \Illuminate\Queue\Console\ForgetFailedCommand::class,
        'command.queue.listen' => \Illuminate\Queue\Console\ListenCommand::class,
        'command.queue.restart' => \Illuminate\Queue\Console\RestartCommand::class,
        'command.queue.retry' => \Illuminate\Queue\Console\RetryCommand::class,
        'command.queue.work' => \Illuminate\Queue\Console\WorkCommand::class,
        'command.seed' => \Illuminate\Database\Console\Seeds\SeedCommand::class,
        'Illuminate\Console\Scheduling\ScheduleFinishCommand' => \Illuminate\Console\Scheduling\ScheduleFinishCommand::class,
        'Illuminate\Console\Scheduling\ScheduleRunCommand' => \Illuminate\Console\Scheduling\ScheduleRunCommand::class,
        'command.cache.table' => \Illuminate\Cache\Console\CacheTableCommand::class,
        'command.migrate.make' => \Illuminate\Database\Console\Migrations\MigrateMakeCommand::class,
        'command.queue.failed-table' => \Illuminate\Queue\Console\FailedTableCommand::class,
        'command.queue.table' => \Illuminate\Queue\Console\TableCommand::class,
        'command.seeder.make' => \Illuminate\Database\Console\Seeds\SeederMakeCommand::class,
        'composer' => \Illuminate\Support\Composer::class,
    ]));
    override(\App::makeWith(0), map([
        '' => '@',
        'db' => \Illuminate\Database\DatabaseManager::class,
        'config' => \Illuminate\Config\Repository::class,
        'db.factory' => \Grimzy\LaravelMysqlSpatial\Connectors\ConnectionFactory::class,
        'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
        'events' => \Illuminate\Events\Dispatcher::class,
        'view' => \Illuminate\View\Factory::class,
        'view.finder' => \Illuminate\View\FileViewFinder::class,
        'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
        'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
        'files' => \Illuminate\Filesystem\Filesystem::class,
        'Illuminate\Contracts\Debug\ExceptionHandler' => \App\Exceptions\Handler::class,
        'Illuminate\Contracts\Console\Kernel' => \App\Console\Kernel::class,
        'Psr\Log\LoggerInterface' => \Illuminate\Log\LogManager::class,
        'redis' => \Illuminate\Redis\RedisManager::class,
        'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
        'tymon.jwt.provider.user' => \Tymon\JWTAuth\Providers\User\EloquentUserAdapter::class,
        'tymon.jwt.provider.jwt' => \Tymon\JWTAuth\Providers\JWT\NamshiAdapter::class,
        'tymon.jwt.provider.auth' => \Tymon\JWTAuth\Providers\Auth\IlluminateAuthAdapter::class,
        'tymon.jwt.provider.storage' => \Tymon\JWTAuth\Providers\Storage\IlluminateCacheAdapter::class,
        'tymon.jwt.blacklist' => \Tymon\JWTAuth\Blacklist::class,
        'tymon.jwt.claim.factory' => \Tymon\JWTAuth\Claims\Factory::class,
        'tymon.jwt.manager' => \Tymon\JWTAuth\JWTManager::class,
        'tymon.jwt.auth' => \Tymon\JWTAuth\JWTAuth::class,
        'tymon.jwt.validators.payload' => \Tymon\JWTAuth\Validators\PayloadValidator::class,
        'tymon.jwt.payload.factory' => \Tymon\JWTAuth\PayloadFactory::class,
        'tymon.jwt.generate' => \Tymon\JWTAuth\Commands\JWTGenerateCommand::class,
        'Tymon\JWTAuth\JWTAuth' => \Tymon\JWTAuth\JWTAuth::class,
        'Tymon\JWTAuth\Providers\User\UserInterface' => \Tymon\JWTAuth\Providers\User\EloquentUserAdapter::class,
        'Tymon\JWTAuth\Providers\JWT\JWTInterface' => \Tymon\JWTAuth\Providers\JWT\NamshiAdapter::class,
        'Tymon\JWTAuth\Providers\Auth\AuthInterface' => \Tymon\JWTAuth\Providers\Auth\IlluminateAuthAdapter::class,
        'Tymon\JWTAuth\Providers\Storage\StorageInterface' => \Tymon\JWTAuth\Providers\Storage\IlluminateCacheAdapter::class,
        'Tymon\JWTAuth\JWTManager' => \Tymon\JWTAuth\JWTManager::class,
        'Tymon\JWTAuth\Blacklist' => \Tymon\JWTAuth\Blacklist::class,
        'Tymon\JWTAuth\PayloadFactory' => \Tymon\JWTAuth\PayloadFactory::class,
        'Tymon\JWTAuth\Claims\Factory' => \Tymon\JWTAuth\Claims\Factory::class,
        'Tymon\JWTAuth\Validators\PayloadValidator' => \Tymon\JWTAuth\Validators\PayloadValidator::class,
        'auth' => \Illuminate\Auth\AuthManager::class,
        'auth.driver' => \Zoran\JwtAuthGuard\JwtAuthGuard::class,
        'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
        'translator' => \Illuminate\Translation\Translator::class,
        'translation.loader' => \Illuminate\Translation\FileLoader::class,
        'wechat.official_account.default' => \EasyWeChat\OfficialAccount\Application::class,
        'wechat.mini_program.default' => \EasyWeChat\MiniProgram\Application::class,
        'wechat.payment.default' => \EasyWeChat\Payment\Application::class,
        'ali.user.oauth' => \App\Ali\Oauth\OauthChargeContext::class,
        'ali.oauth.token' => \App\Ali\Oauth\OauthChargeContext::class,
        'command.ide-helper.generate' => \Barryvdh\LaravelIdeHelper\Console\GeneratorCommand::class,
        'command.ide-helper.models' => \Barryvdh\LaravelIdeHelper\Console\ModelsCommand::class,
        'command.ide-helper.meta' => \Barryvdh\LaravelIdeHelper\Console\MetaCommand::class,
        'command.ide-helper.eloquent' => \Barryvdh\LaravelIdeHelper\Console\EloquentCommand::class,
        'payment.ali.wap' => \Payment\ChargeContext::class,
        'payment.ali.web' => \Payment\ChargeContext::class,
        'payment.ali.bar' => \Payment\ChargeContext::class,
        'payment.ali.app' => \Payment\ChargeContext::class,
        'payment.ali.qr' => \Payment\ChargeContext::class,
        'payment.wechat.app' => \Payment\ChargeContext::class,
        'payment.wechat.wap' => \Payment\ChargeContext::class,
        'payment.wechat.public' => \Payment\ChargeContext::class,
        'payment.wechat.bar' => \Payment\ChargeContext::class,
        'payment.wechat.miniProgram' => \Payment\ChargeContext::class,
        'payment.wechat.qr' => \Payment\ChargeContext::class,
        'payment.wechat.notify' => \Payment\NotifyContext::class,
        'payment.ali.notify' => \Payment\NotifyContext::class,
        'payment.notify' => \App\Services\PaymentNotify::class,
        'wechat.payment.aggregate' => \Payment\ChargeContext::class,
        'ali.payment.aggregate' => \Payment\ChargeContext::class,
        'order.builder' => \App\Services\OrderBuilder::class,
        'api.router' => \Dingo\Api\Routing\Router::class,
        'Dingo\Api\Routing\ResourceRegistrar' => \Dingo\Api\Routing\ResourceRegistrar::class,
        'api.url' => \Dingo\Api\Routing\UrlGenerator::class,
        'api.limiting' => \Dingo\Api\Http\RateLimit\Handler::class,
        'api.http.validator' => \Dingo\Api\Http\RequestValidator::class,
        'Dingo\Api\Http\Validation\Domain' => \Dingo\Api\Http\Validation\Domain::class,
        'Dingo\Api\Http\Validation\Prefix' => \Dingo\Api\Http\Validation\Prefix::class,
        'Dingo\Api\Http\Validation\Accept' => \Dingo\Api\Http\Validation\Accept::class,
        'Dingo\Api\Http\Parser\Accept' => \Dingo\Api\Http\Parser\Accept::class,
        'api.http.response' => \Dingo\Api\Http\Response\Factory::class,
        'Dingo\Api\Http\Middleware\Request' => \Dingo\Api\Http\Middleware\Request::class,
        'Dingo\Api\Http\Middleware\Auth' => \Dingo\Api\Http\Middleware\Auth::class,
        'Dingo\Api\Http\Middleware\RateLimit' => \Dingo\Api\Http\Middleware\RateLimit::class,
        'Dingo\Api\Http\Middleware\PrepareController' => \Dingo\Api\Http\Middleware\PrepareController::class,
        'api.exception' => \Dingo\Api\Exception\Handler::class,
        'api.dispatcher' => \Dingo\Api\Dispatcher::class,
        'api.auth' => \Dingo\Api\Auth\Auth::class,
        'api.transformer' => \Dingo\Api\Transformer\Factory::class,
        'Dingo\Api\Console\Command\Docs' => \Dingo\Api\Console\Command\Docs::class,
        'api.router.adapter' => \Dingo\Api\Routing\Adapter\Lumen::class,
        'cache' => \Illuminate\Cache\CacheManager::class,
        'cache.store' => \Illuminate\Cache\Repository::class,
        'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
        'app.routes' => \App\Routes\Routes::class,
        'queue' => \Illuminate\Queue\QueueManager::class,
        'queue.worker' => \Illuminate\Queue\Worker::class,
        'queue.listener' => \Illuminate\Queue\Listener::class,
        'queue.failer' => \Illuminate\Queue\Failed\DatabaseFailedJobProvider::class,
        'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
        'migrator' => \Illuminate\Database\Migrations\Migrator::class,
        'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
        'command.cache.clear' => \Illuminate\Cache\Console\ClearCommand::class,
        'command.cache.forget' => \Illuminate\Cache\Console\ForgetCommand::class,
        'command.auth.resets.clear' => \Illuminate\Auth\Console\ClearResetsCommand::class,
        'command.migrate' => \Illuminate\Database\Console\Migrations\MigrateCommand::class,
        'command.migrate.install' => \Illuminate\Database\Console\Migrations\InstallCommand::class,
        'command.migrate.fresh' => \Illuminate\Database\Console\Migrations\FreshCommand::class,
        'command.migrate.refresh' => \Illuminate\Database\Console\Migrations\RefreshCommand::class,
        'command.migrate.reset' => \Illuminate\Database\Console\Migrations\ResetCommand::class,
        'command.migrate.rollback' => \Illuminate\Database\Console\Migrations\RollbackCommand::class,
        'command.migrate.status' => \Illuminate\Database\Console\Migrations\StatusCommand::class,
        'command.queue.failed' => \Illuminate\Queue\Console\ListFailedCommand::class,
        'command.queue.flush' => \Illuminate\Queue\Console\FlushFailedCommand::class,
        'command.queue.forget' => \Illuminate\Queue\Console\ForgetFailedCommand::class,
        'command.queue.listen' => \Illuminate\Queue\Console\ListenCommand::class,
        'command.queue.restart' => \Illuminate\Queue\Console\RestartCommand::class,
        'command.queue.retry' => \Illuminate\Queue\Console\RetryCommand::class,
        'command.queue.work' => \Illuminate\Queue\Console\WorkCommand::class,
        'command.seed' => \Illuminate\Database\Console\Seeds\SeedCommand::class,
        'Illuminate\Console\Scheduling\ScheduleFinishCommand' => \Illuminate\Console\Scheduling\ScheduleFinishCommand::class,
        'Illuminate\Console\Scheduling\ScheduleRunCommand' => \Illuminate\Console\Scheduling\ScheduleRunCommand::class,
        'command.cache.table' => \Illuminate\Cache\Console\CacheTableCommand::class,
        'command.migrate.make' => \Illuminate\Database\Console\Migrations\MigrateMakeCommand::class,
        'command.queue.failed-table' => \Illuminate\Queue\Console\FailedTableCommand::class,
        'command.queue.table' => \Illuminate\Queue\Console\TableCommand::class,
        'command.seeder.make' => \Illuminate\Database\Console\Seeds\SeederMakeCommand::class,
        'composer' => \Illuminate\Support\Composer::class,
    ]));
    override(\app(0), map([
        '' => '@',
        'db' => \Illuminate\Database\DatabaseManager::class,
        'config' => \Illuminate\Config\Repository::class,
        'db.factory' => \Grimzy\LaravelMysqlSpatial\Connectors\ConnectionFactory::class,
        'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
        'events' => \Illuminate\Events\Dispatcher::class,
        'view' => \Illuminate\View\Factory::class,
        'view.finder' => \Illuminate\View\FileViewFinder::class,
        'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
        'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
        'files' => \Illuminate\Filesystem\Filesystem::class,
        'Illuminate\Contracts\Debug\ExceptionHandler' => \App\Exceptions\Handler::class,
        'Illuminate\Contracts\Console\Kernel' => \App\Console\Kernel::class,
        'Psr\Log\LoggerInterface' => \Illuminate\Log\LogManager::class,
        'redis' => \Illuminate\Redis\RedisManager::class,
        'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
        'tymon.jwt.provider.user' => \Tymon\JWTAuth\Providers\User\EloquentUserAdapter::class,
        'tymon.jwt.provider.jwt' => \Tymon\JWTAuth\Providers\JWT\NamshiAdapter::class,
        'tymon.jwt.provider.auth' => \Tymon\JWTAuth\Providers\Auth\IlluminateAuthAdapter::class,
        'tymon.jwt.provider.storage' => \Tymon\JWTAuth\Providers\Storage\IlluminateCacheAdapter::class,
        'tymon.jwt.blacklist' => \Tymon\JWTAuth\Blacklist::class,
        'tymon.jwt.claim.factory' => \Tymon\JWTAuth\Claims\Factory::class,
        'tymon.jwt.manager' => \Tymon\JWTAuth\JWTManager::class,
        'tymon.jwt.auth' => \Tymon\JWTAuth\JWTAuth::class,
        'tymon.jwt.validators.payload' => \Tymon\JWTAuth\Validators\PayloadValidator::class,
        'tymon.jwt.payload.factory' => \Tymon\JWTAuth\PayloadFactory::class,
        'tymon.jwt.generate' => \Tymon\JWTAuth\Commands\JWTGenerateCommand::class,
        'Tymon\JWTAuth\JWTAuth' => \Tymon\JWTAuth\JWTAuth::class,
        'Tymon\JWTAuth\Providers\User\UserInterface' => \Tymon\JWTAuth\Providers\User\EloquentUserAdapter::class,
        'Tymon\JWTAuth\Providers\JWT\JWTInterface' => \Tymon\JWTAuth\Providers\JWT\NamshiAdapter::class,
        'Tymon\JWTAuth\Providers\Auth\AuthInterface' => \Tymon\JWTAuth\Providers\Auth\IlluminateAuthAdapter::class,
        'Tymon\JWTAuth\Providers\Storage\StorageInterface' => \Tymon\JWTAuth\Providers\Storage\IlluminateCacheAdapter::class,
        'Tymon\JWTAuth\JWTManager' => \Tymon\JWTAuth\JWTManager::class,
        'Tymon\JWTAuth\Blacklist' => \Tymon\JWTAuth\Blacklist::class,
        'Tymon\JWTAuth\PayloadFactory' => \Tymon\JWTAuth\PayloadFactory::class,
        'Tymon\JWTAuth\Claims\Factory' => \Tymon\JWTAuth\Claims\Factory::class,
        'Tymon\JWTAuth\Validators\PayloadValidator' => \Tymon\JWTAuth\Validators\PayloadValidator::class,
        'auth' => \Illuminate\Auth\AuthManager::class,
        'auth.driver' => \Zoran\JwtAuthGuard\JwtAuthGuard::class,
        'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
        'translator' => \Illuminate\Translation\Translator::class,
        'translation.loader' => \Illuminate\Translation\FileLoader::class,
        'wechat.official_account.default' => \EasyWeChat\OfficialAccount\Application::class,
        'wechat.mini_program.default' => \EasyWeChat\MiniProgram\Application::class,
        'wechat.payment.default' => \EasyWeChat\Payment\Application::class,
        'ali.user.oauth' => \App\Ali\Oauth\OauthChargeContext::class,
        'ali.oauth.token' => \App\Ali\Oauth\OauthChargeContext::class,
        'command.ide-helper.generate' => \Barryvdh\LaravelIdeHelper\Console\GeneratorCommand::class,
        'command.ide-helper.models' => \Barryvdh\LaravelIdeHelper\Console\ModelsCommand::class,
        'command.ide-helper.meta' => \Barryvdh\LaravelIdeHelper\Console\MetaCommand::class,
        'command.ide-helper.eloquent' => \Barryvdh\LaravelIdeHelper\Console\EloquentCommand::class,
        'payment.ali.wap' => \Payment\ChargeContext::class,
        'payment.ali.web' => \Payment\ChargeContext::class,
        'payment.ali.bar' => \Payment\ChargeContext::class,
        'payment.ali.app' => \Payment\ChargeContext::class,
        'payment.ali.qr' => \Payment\ChargeContext::class,
        'payment.wechat.app' => \Payment\ChargeContext::class,
        'payment.wechat.wap' => \Payment\ChargeContext::class,
        'payment.wechat.public' => \Payment\ChargeContext::class,
        'payment.wechat.bar' => \Payment\ChargeContext::class,
        'payment.wechat.miniProgram' => \Payment\ChargeContext::class,
        'payment.wechat.qr' => \Payment\ChargeContext::class,
        'payment.wechat.notify' => \Payment\NotifyContext::class,
        'payment.ali.notify' => \Payment\NotifyContext::class,
        'payment.notify' => \App\Services\PaymentNotify::class,
        'wechat.payment.aggregate' => \Payment\ChargeContext::class,
        'ali.payment.aggregate' => \Payment\ChargeContext::class,
        'order.builder' => \App\Services\OrderBuilder::class,
        'api.router' => \Dingo\Api\Routing\Router::class,
        'Dingo\Api\Routing\ResourceRegistrar' => \Dingo\Api\Routing\ResourceRegistrar::class,
        'api.url' => \Dingo\Api\Routing\UrlGenerator::class,
        'api.limiting' => \Dingo\Api\Http\RateLimit\Handler::class,
        'api.http.validator' => \Dingo\Api\Http\RequestValidator::class,
        'Dingo\Api\Http\Validation\Domain' => \Dingo\Api\Http\Validation\Domain::class,
        'Dingo\Api\Http\Validation\Prefix' => \Dingo\Api\Http\Validation\Prefix::class,
        'Dingo\Api\Http\Validation\Accept' => \Dingo\Api\Http\Validation\Accept::class,
        'Dingo\Api\Http\Parser\Accept' => \Dingo\Api\Http\Parser\Accept::class,
        'api.http.response' => \Dingo\Api\Http\Response\Factory::class,
        'Dingo\Api\Http\Middleware\Request' => \Dingo\Api\Http\Middleware\Request::class,
        'Dingo\Api\Http\Middleware\Auth' => \Dingo\Api\Http\Middleware\Auth::class,
        'Dingo\Api\Http\Middleware\RateLimit' => \Dingo\Api\Http\Middleware\RateLimit::class,
        'Dingo\Api\Http\Middleware\PrepareController' => \Dingo\Api\Http\Middleware\PrepareController::class,
        'api.exception' => \Dingo\Api\Exception\Handler::class,
        'api.dispatcher' => \Dingo\Api\Dispatcher::class,
        'api.auth' => \Dingo\Api\Auth\Auth::class,
        'api.transformer' => \Dingo\Api\Transformer\Factory::class,
        'Dingo\Api\Console\Command\Docs' => \Dingo\Api\Console\Command\Docs::class,
        'api.router.adapter' => \Dingo\Api\Routing\Adapter\Lumen::class,
        'cache' => \Illuminate\Cache\CacheManager::class,
        'cache.store' => \Illuminate\Cache\Repository::class,
        'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
        'app.routes' => \App\Routes\Routes::class,
        'queue' => \Illuminate\Queue\QueueManager::class,
        'queue.worker' => \Illuminate\Queue\Worker::class,
        'queue.listener' => \Illuminate\Queue\Listener::class,
        'queue.failer' => \Illuminate\Queue\Failed\DatabaseFailedJobProvider::class,
        'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
        'migrator' => \Illuminate\Database\Migrations\Migrator::class,
        'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
        'command.cache.clear' => \Illuminate\Cache\Console\ClearCommand::class,
        'command.cache.forget' => \Illuminate\Cache\Console\ForgetCommand::class,
        'command.auth.resets.clear' => \Illuminate\Auth\Console\ClearResetsCommand::class,
        'command.migrate' => \Illuminate\Database\Console\Migrations\MigrateCommand::class,
        'command.migrate.install' => \Illuminate\Database\Console\Migrations\InstallCommand::class,
        'command.migrate.fresh' => \Illuminate\Database\Console\Migrations\FreshCommand::class,
        'command.migrate.refresh' => \Illuminate\Database\Console\Migrations\RefreshCommand::class,
        'command.migrate.reset' => \Illuminate\Database\Console\Migrations\ResetCommand::class,
        'command.migrate.rollback' => \Illuminate\Database\Console\Migrations\RollbackCommand::class,
        'command.migrate.status' => \Illuminate\Database\Console\Migrations\StatusCommand::class,
        'command.queue.failed' => \Illuminate\Queue\Console\ListFailedCommand::class,
        'command.queue.flush' => \Illuminate\Queue\Console\FlushFailedCommand::class,
        'command.queue.forget' => \Illuminate\Queue\Console\ForgetFailedCommand::class,
        'command.queue.listen' => \Illuminate\Queue\Console\ListenCommand::class,
        'command.queue.restart' => \Illuminate\Queue\Console\RestartCommand::class,
        'command.queue.retry' => \Illuminate\Queue\Console\RetryCommand::class,
        'command.queue.work' => \Illuminate\Queue\Console\WorkCommand::class,
        'command.seed' => \Illuminate\Database\Console\Seeds\SeedCommand::class,
        'Illuminate\Console\Scheduling\ScheduleFinishCommand' => \Illuminate\Console\Scheduling\ScheduleFinishCommand::class,
        'Illuminate\Console\Scheduling\ScheduleRunCommand' => \Illuminate\Console\Scheduling\ScheduleRunCommand::class,
        'command.cache.table' => \Illuminate\Cache\Console\CacheTableCommand::class,
        'command.migrate.make' => \Illuminate\Database\Console\Migrations\MigrateMakeCommand::class,
        'command.queue.failed-table' => \Illuminate\Queue\Console\FailedTableCommand::class,
        'command.queue.table' => \Illuminate\Queue\Console\TableCommand::class,
        'command.seeder.make' => \Illuminate\Database\Console\Seeds\SeederMakeCommand::class,
        'composer' => \Illuminate\Support\Composer::class,
    ]));
    override(\resolve(0), map([
        '' => '@',
        'db' => \Illuminate\Database\DatabaseManager::class,
        'config' => \Illuminate\Config\Repository::class,
        'db.factory' => \Grimzy\LaravelMysqlSpatial\Connectors\ConnectionFactory::class,
        'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
        'events' => \Illuminate\Events\Dispatcher::class,
        'view' => \Illuminate\View\Factory::class,
        'view.finder' => \Illuminate\View\FileViewFinder::class,
        'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
        'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
        'files' => \Illuminate\Filesystem\Filesystem::class,
        'Illuminate\Contracts\Debug\ExceptionHandler' => \App\Exceptions\Handler::class,
        'Illuminate\Contracts\Console\Kernel' => \App\Console\Kernel::class,
        'Psr\Log\LoggerInterface' => \Illuminate\Log\LogManager::class,
        'redis' => \Illuminate\Redis\RedisManager::class,
        'redis.connection' => \Illuminate\Redis\Connections\PredisConnection::class,
        'tymon.jwt.provider.user' => \Tymon\JWTAuth\Providers\User\EloquentUserAdapter::class,
        'tymon.jwt.provider.jwt' => \Tymon\JWTAuth\Providers\JWT\NamshiAdapter::class,
        'tymon.jwt.provider.auth' => \Tymon\JWTAuth\Providers\Auth\IlluminateAuthAdapter::class,
        'tymon.jwt.provider.storage' => \Tymon\JWTAuth\Providers\Storage\IlluminateCacheAdapter::class,
        'tymon.jwt.blacklist' => \Tymon\JWTAuth\Blacklist::class,
        'tymon.jwt.claim.factory' => \Tymon\JWTAuth\Claims\Factory::class,
        'tymon.jwt.manager' => \Tymon\JWTAuth\JWTManager::class,
        'tymon.jwt.auth' => \Tymon\JWTAuth\JWTAuth::class,
        'tymon.jwt.validators.payload' => \Tymon\JWTAuth\Validators\PayloadValidator::class,
        'tymon.jwt.payload.factory' => \Tymon\JWTAuth\PayloadFactory::class,
        'tymon.jwt.generate' => \Tymon\JWTAuth\Commands\JWTGenerateCommand::class,
        'Tymon\JWTAuth\JWTAuth' => \Tymon\JWTAuth\JWTAuth::class,
        'Tymon\JWTAuth\Providers\User\UserInterface' => \Tymon\JWTAuth\Providers\User\EloquentUserAdapter::class,
        'Tymon\JWTAuth\Providers\JWT\JWTInterface' => \Tymon\JWTAuth\Providers\JWT\NamshiAdapter::class,
        'Tymon\JWTAuth\Providers\Auth\AuthInterface' => \Tymon\JWTAuth\Providers\Auth\IlluminateAuthAdapter::class,
        'Tymon\JWTAuth\Providers\Storage\StorageInterface' => \Tymon\JWTAuth\Providers\Storage\IlluminateCacheAdapter::class,
        'Tymon\JWTAuth\JWTManager' => \Tymon\JWTAuth\JWTManager::class,
        'Tymon\JWTAuth\Blacklist' => \Tymon\JWTAuth\Blacklist::class,
        'Tymon\JWTAuth\PayloadFactory' => \Tymon\JWTAuth\PayloadFactory::class,
        'Tymon\JWTAuth\Claims\Factory' => \Tymon\JWTAuth\Claims\Factory::class,
        'Tymon\JWTAuth\Validators\PayloadValidator' => \Tymon\JWTAuth\Validators\PayloadValidator::class,
        'auth' => \Illuminate\Auth\AuthManager::class,
        'auth.driver' => \Zoran\JwtAuthGuard\JwtAuthGuard::class,
        'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
        'translator' => \Illuminate\Translation\Translator::class,
        'translation.loader' => \Illuminate\Translation\FileLoader::class,
        'wechat.official_account.default' => \EasyWeChat\OfficialAccount\Application::class,
        'wechat.mini_program.default' => \EasyWeChat\MiniProgram\Application::class,
        'wechat.payment.default' => \EasyWeChat\Payment\Application::class,
        'ali.user.oauth' => \App\Ali\Oauth\OauthChargeContext::class,
        'ali.oauth.token' => \App\Ali\Oauth\OauthChargeContext::class,
        'command.ide-helper.generate' => \Barryvdh\LaravelIdeHelper\Console\GeneratorCommand::class,
        'command.ide-helper.models' => \Barryvdh\LaravelIdeHelper\Console\ModelsCommand::class,
        'command.ide-helper.meta' => \Barryvdh\LaravelIdeHelper\Console\MetaCommand::class,
        'command.ide-helper.eloquent' => \Barryvdh\LaravelIdeHelper\Console\EloquentCommand::class,
        'payment.ali.wap' => \Payment\ChargeContext::class,
        'payment.ali.web' => \Payment\ChargeContext::class,
        'payment.ali.bar' => \Payment\ChargeContext::class,
        'payment.ali.app' => \Payment\ChargeContext::class,
        'payment.ali.qr' => \Payment\ChargeContext::class,
        'payment.wechat.app' => \Payment\ChargeContext::class,
        'payment.wechat.wap' => \Payment\ChargeContext::class,
        'payment.wechat.public' => \Payment\ChargeContext::class,
        'payment.wechat.bar' => \Payment\ChargeContext::class,
        'payment.wechat.miniProgram' => \Payment\ChargeContext::class,
        'payment.wechat.qr' => \Payment\ChargeContext::class,
        'payment.wechat.notify' => \Payment\NotifyContext::class,
        'payment.ali.notify' => \Payment\NotifyContext::class,
        'payment.notify' => \App\Services\PaymentNotify::class,
        'wechat.payment.aggregate' => \Payment\ChargeContext::class,
        'ali.payment.aggregate' => \Payment\ChargeContext::class,
        'order.builder' => \App\Services\OrderBuilder::class,
        'api.router' => \Dingo\Api\Routing\Router::class,
        'Dingo\Api\Routing\ResourceRegistrar' => \Dingo\Api\Routing\ResourceRegistrar::class,
        'api.url' => \Dingo\Api\Routing\UrlGenerator::class,
        'api.limiting' => \Dingo\Api\Http\RateLimit\Handler::class,
        'api.http.validator' => \Dingo\Api\Http\RequestValidator::class,
        'Dingo\Api\Http\Validation\Domain' => \Dingo\Api\Http\Validation\Domain::class,
        'Dingo\Api\Http\Validation\Prefix' => \Dingo\Api\Http\Validation\Prefix::class,
        'Dingo\Api\Http\Validation\Accept' => \Dingo\Api\Http\Validation\Accept::class,
        'Dingo\Api\Http\Parser\Accept' => \Dingo\Api\Http\Parser\Accept::class,
        'api.http.response' => \Dingo\Api\Http\Response\Factory::class,
        'Dingo\Api\Http\Middleware\Request' => \Dingo\Api\Http\Middleware\Request::class,
        'Dingo\Api\Http\Middleware\Auth' => \Dingo\Api\Http\Middleware\Auth::class,
        'Dingo\Api\Http\Middleware\RateLimit' => \Dingo\Api\Http\Middleware\RateLimit::class,
        'Dingo\Api\Http\Middleware\PrepareController' => \Dingo\Api\Http\Middleware\PrepareController::class,
        'api.exception' => \Dingo\Api\Exception\Handler::class,
        'api.dispatcher' => \Dingo\Api\Dispatcher::class,
        'api.auth' => \Dingo\Api\Auth\Auth::class,
        'api.transformer' => \Dingo\Api\Transformer\Factory::class,
        'Dingo\Api\Console\Command\Docs' => \Dingo\Api\Console\Command\Docs::class,
        'api.router.adapter' => \Dingo\Api\Routing\Adapter\Lumen::class,
        'cache' => \Illuminate\Cache\CacheManager::class,
        'cache.store' => \Illuminate\Cache\Repository::class,
        'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
        'app.routes' => \App\Routes\Routes::class,
        'queue' => \Illuminate\Queue\QueueManager::class,
        'queue.worker' => \Illuminate\Queue\Worker::class,
        'queue.listener' => \Illuminate\Queue\Listener::class,
        'queue.failer' => \Illuminate\Queue\Failed\DatabaseFailedJobProvider::class,
        'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
        'migrator' => \Illuminate\Database\Migrations\Migrator::class,
        'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
        'command.cache.clear' => \Illuminate\Cache\Console\ClearCommand::class,
        'command.cache.forget' => \Illuminate\Cache\Console\ForgetCommand::class,
        'command.auth.resets.clear' => \Illuminate\Auth\Console\ClearResetsCommand::class,
        'command.migrate' => \Illuminate\Database\Console\Migrations\MigrateCommand::class,
        'command.migrate.install' => \Illuminate\Database\Console\Migrations\InstallCommand::class,
        'command.migrate.fresh' => \Illuminate\Database\Console\Migrations\FreshCommand::class,
        'command.migrate.refresh' => \Illuminate\Database\Console\Migrations\RefreshCommand::class,
        'command.migrate.reset' => \Illuminate\Database\Console\Migrations\ResetCommand::class,
        'command.migrate.rollback' => \Illuminate\Database\Console\Migrations\RollbackCommand::class,
        'command.migrate.status' => \Illuminate\Database\Console\Migrations\StatusCommand::class,
        'command.queue.failed' => \Illuminate\Queue\Console\ListFailedCommand::class,
        'command.queue.flush' => \Illuminate\Queue\Console\FlushFailedCommand::class,
        'command.queue.forget' => \Illuminate\Queue\Console\ForgetFailedCommand::class,
        'command.queue.listen' => \Illuminate\Queue\Console\ListenCommand::class,
        'command.queue.restart' => \Illuminate\Queue\Console\RestartCommand::class,
        'command.queue.retry' => \Illuminate\Queue\Console\RetryCommand::class,
        'command.queue.work' => \Illuminate\Queue\Console\WorkCommand::class,
        'command.seed' => \Illuminate\Database\Console\Seeds\SeedCommand::class,
        'Illuminate\Console\Scheduling\ScheduleFinishCommand' => \Illuminate\Console\Scheduling\ScheduleFinishCommand::class,
        'Illuminate\Console\Scheduling\ScheduleRunCommand' => \Illuminate\Console\Scheduling\ScheduleRunCommand::class,
        'command.cache.table' => \Illuminate\Cache\Console\CacheTableCommand::class,
        'command.migrate.make' => \Illuminate\Database\Console\Migrations\MigrateMakeCommand::class,
        'command.queue.failed-table' => \Illuminate\Queue\Console\FailedTableCommand::class,
        'command.queue.table' => \Illuminate\Queue\Console\TableCommand::class,
        'command.seeder.make' => \Illuminate\Database\Console\Seeds\SeederMakeCommand::class,
        'composer' => \Illuminate\Support\Composer::class,
    ]));

    override(\Illuminate\Support\Arr::add(0), type(0));
    override(\Illuminate\Support\Arr::except(0), type(0));
    override(\Illuminate\Support\Arr::first(0), elementType(0));
    override(\Illuminate\Support\Arr::last(0), elementType(0));
    override(\Illuminate\Support\Arr::get(0), elementType(0));
    override(\Illuminate\Support\Arr::only(0), type(0));
    override(\Illuminate\Support\Arr::prepend(0), type(0));
    override(\Illuminate\Support\Arr::pull(0), elementType(0));
    override(\Illuminate\Support\Arr::set(0), type(0));
    override(\Illuminate\Support\Arr::shuffle(0), type(0));
    override(\Illuminate\Support\Arr::sort(0), type(0));
    override(\Illuminate\Support\Arr::sortRecursive(0), type(0));
    override(\Illuminate\Support\Arr::where(0), type(0));
    override(\array_add(0), type(0));
    override(\array_except(0), type(0));
    override(\array_first(0), elementType(0));
    override(\array_last(0), elementType(0));
    override(\array_get(0), elementType(0));
    override(\array_only(0), type(0));
    override(\array_prepend(0), type(0));
    override(\array_pull(0), elementType(0));
    override(\array_set(0), type(0));
    override(\array_sort(0), type(0));
    override(\array_sort_recursive(0), type(0));
    override(\array_where(0), type(0));
    override(\head(0), elementType(0));
    override(\last(0), elementType(0));
    override(\with(0), type(0));
    override(\tap(0), type(0));

}
