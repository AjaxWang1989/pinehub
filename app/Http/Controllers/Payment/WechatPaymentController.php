<?php

namespace App\Http\Controllers\Payment;

use App\Entities\Customer;
use App\Entities\Order;
use App\Entities\Shop;
use App\Http\Controllers\Payment\PaymentController as Controller;
use App\Http\Response\JsonResponse;
use Dingo\Api\Http\Request as DingoRequest;
use Illuminate\Http\Request as LumenRequest;
use Dingo\Api\Http\Response;
use Illuminate\Support\Facades\Log;
use Payment\NotifyContext;
use App\Transformers\Api\PaymentSignedTransformer as WechatPaymentSigned;
use App\Entities\PaymentSigned as WechatPayment;

class WechatPaymentController extends Controller
{
    /**
     * 聚合支付
     * @param LumenRequest|DingoRequest $request
     * @return Response| null
     * @throws
     * */
    public function aggregate(LumenRequest $request)
    {
        session()->setId($request->input('token'));
        session()->start();
        /**
         * @var Shop $shop
         * */
        $shop = session('shop', null);

        /**
         * @var Customer $customer
         * */
        $customer = session('customer', null);

        $order = [
            'type' => Order::OFF_LINE_PAY,
            'pay_type' => Order::WECHAT_PAY,
            'open_id' => $customer->platformOpenId,
            'app_id' => $customer->appId,
            'wechat_app_id' => $customer->platformAppId,
            'customer_id' => $customer->id,
            'ip' => $request->getClientIp(),
            'shop_id' => $shop->id,
            'member_id'   => $customer->memberId
        ];
        Log::debug('payment order ', $order);
        $request->merge($order);
        $order = $this->app->make('order.builder')->setInput($request->all())->handle();
        $result = app('wechat')->unify($order, $order->wechatAppId);
        $order->status = Order::MAKE_SURE;
        $order->save();
        if($result['return_code'] === 'SUCCESS'){
            $sdkConfig = app('wechat')->jssdk($result['prepay_id'], $order->wechatAppId);
            $result['sdk_config'] = $sdkConfig;
        }
        return $this->response(new JsonResponse($result));
    }

    public function aggregatePage(LumenRequest $request)
    {
        $paymentApi = paymentApiUriGenerator('/wechat/aggregate');
        $accept = "application/vnd.pinehub.v0.0.1+json";
        $config = app('wechat')->officeAccount()->jssdk->buildConfig(['chooseWXPay']);

        $apiUrl = $paymentApi.'?token='.session()->getId();
        $shop = $this->shopModel->find((int)$request->input('shop_id'));
        session(['shop' => $shop]);
        try{

            return view('payment.aggregate.wechatpay')->with([
                'paymentApi' => $apiUrl,
                'config' => $config,
                'accept' => $accept,
            ]);
        }catch (\Exception $exception) {
            return view('payment.aggregate.wechatpay')->with([
                'paymentApi' => $apiUrl,
                'config' => $config,
                'accept' => $accept,
            ]);
        }
    }


    public function notify(string $type = 'wechat', NotifyContext $notify = null)
    {
        $notify = $this->app->make('payment.wechat.notify');
        parent::notify($type, $notify); // TODO: Change the autogenerated stub
    }
}
