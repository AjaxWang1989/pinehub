<?php /** @noinspection ALL */

namespace App\Http\Controllers\Payment;

use App\Entities\Order;
use Dingo\Api\Http\Request as DingoRequest;
use Illuminate\Http\Request as LumenRequest;
use Dingo\Api\Http\Response;
use App\Http\Controllers\Payment\PaymentController as Controller;
use Illuminate\View\View;
use Payment\NotifyContext;


class AliPaymentController extends Controller
{
    /**
     * 聚合支付
     * @param DingoRequesti|LumenRequest $request
     * @return Response|View|null
     * @throws
     * */
    public function aggregate(LumenRequest $request)
    {
        if($request->method() === HTTP_METHOD_GET){
            try{
                $shop = $this->shopModel->find($request->input('shop_id'));
                return view('payment.aggregate.alipay')->with(['type' => Order::ALI_PAY, 'shop' => $shop]);
            }catch (\Exception $exception){
                return View('404');
            }

        }
        $request->merge(['pay_type' => Order::ALI_PAY, 'type' => Order::OFF_LINE_PAY]);
        $order = $this->app->make('order.builder')->handle();
        $charge = app('ali.payment.aggregate');
        return $this->response()->created( $this->preOrder($order->buildAliAggregatePaymentOrder(), $charge))->statusCode(HTTP_STATUS_NOT_MODIFIED);
    }


    public function notify(string $type = 'ali', NotifyContext $notify = null)
    {
        $notify = $this->app->make('payment.ali.notify');
        parent::notify($type, $notify); // TODO: Change the autogenerated stub
    }
}
